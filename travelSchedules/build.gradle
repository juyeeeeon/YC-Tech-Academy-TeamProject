plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.16'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'com.google.cloud.tools.jib' version '3.4.0'      // <--- plugin 추가
}

group = 'com.YcTechAcademy'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
//	implementation 'org.springframework.boot:spring-boot-starter-freemarker'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	testImplementation 'org.springframework.security:spring-security-test'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	implementation "com.querydsl:querydsl-jpa:5.0.0"
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0"
}

tasks.named('test') {
	useJUnitPlatform()
}

//querydsl
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

jib {
	from {
		image = 'openjdk:17-alpine'
	}
	to {
		image = '297606574770.dkr.ecr.ap-northeast-2.amazonaws.com/travel:latest'
		credHelper = 'ecr-login'
		tags = ['latest']
	}
	container {
		jvmFlags = ['-Xms512m']
		format = 'OCI'
	}
}